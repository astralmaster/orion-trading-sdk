{"version":3,"file":"orion-trading-sdk.cjs.production.min.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/utils/Tokens.ts","../src/utils/Constants.ts","../src/utils/TxError.ts","../src/utils/Helpers.ts","../src/services/api.ts","../src/services/chain.ts","../src/services/exchange.ts","../src/services/crypto.ts","../src/utils/Models.ts","../src/services/orionAggregator.ts","../src/services/ws.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import {Dictionary} from \"./Models\";\r\n\r\nexport class Tokens {\r\n    readonly nameToAddress: Dictionary<string>;\r\n\r\n    constructor(nameToAddress: Dictionary<string>) {\r\n        this.nameToAddress = {};\r\n        for (const key in nameToAddress) {\r\n            if (nameToAddress[key]) {\r\n                this.nameToAddress[key] = nameToAddress[key].toLowerCase();\r\n            }\r\n        }\r\n    }\r\n\r\n    addressToName(address: string): (string | undefined) {\r\n        for (const name in this.nameToAddress) {\r\n            if (this.nameToAddress[name]) {\r\n                if (this.nameToAddress[name] === address.toLowerCase()) return name;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    addressToNameSafe(address: string): string {\r\n        const name = this.addressToName(address);\r\n        if (name === undefined) throw new Error('no token name for ' + address);\r\n        return name;\r\n    }\r\n\r\n    nameToAddressSafe(name: string): string {\r\n        const address = this.nameToAddress[name];\r\n        if (!address) throw new Error('no address for ' + name);\r\n        return address;\r\n    }\r\n\r\n    addressesToSymbol(baseAsset: string, quoteAsset: string): (string | undefined) {\r\n        const base = this.addressToName(baseAsset);\r\n        if (!base) return undefined;\r\n        const quote = this.addressToName(quoteAsset);\r\n        if (!quote) return undefined;\r\n        return base + '-' + quote;\r\n    }\r\n\r\n    addressesToSymbolSafe(baseAsset: string, quoteAsset: string): string {\r\n        const symbol = this.addressesToSymbol(baseAsset, quoteAsset);\r\n        if (symbol === undefined) throw new Error('no symbol name for ' + baseAsset + ', ' + quoteAsset);\r\n        return symbol;\r\n    }\r\n\r\n    symbolToAddresses(symbol: string): (string[] | undefined) {\r\n        const arr = symbol.split('-');\r\n        if (arr.length !== 2) return undefined;\r\n        const base = this.nameToAddress[arr[0]];\r\n        if (!base) return undefined;\r\n        const quote = this.nameToAddress[arr[1]];\r\n        if (!quote) return undefined;\r\n        return [base, quote];\r\n    }\r\n}\r\n\r\n","import { TxType } from \"./Models\";\r\n\r\nexport const NETWORK = {\r\n    TEST: {\r\n        BSC: {\r\n            RPC: 'https://data-seed-prebsc-1-s1.binance.org:8545',\r\n            ORION: 'https://testing.orionprotocol.io/bsc-testnet',\r\n            CHAIN_ID: 97,\r\n            TX_TIMEOUT_SEC: 60\r\n        },\r\n        ETH: {\r\n            RPC: 'https://testing.orionprotocol.io/eth-ropsten/rpc',\r\n            ORION: 'https://testing.orionprotocol.io/eth-ropsten',\r\n            CHAIN_ID: 3,\r\n            TX_TIMEOUT_SEC: 60\r\n        }\r\n    },\r\n    MAIN: {\r\n        BSC: {\r\n            RPC: 'https://bsc-dataseed.binance.org',\r\n            ORION: 'https://trade-exp.orionprotocol.io',\r\n            CHAIN_ID: 56,\r\n            TX_TIMEOUT_SEC: 120\r\n        },\r\n        ETH: {\r\n            RPC: 'https://trade.orionprotocol.io/rpc',\r\n            ORION: 'https://trade.orionprotocol.io',\r\n            CHAIN_ID: 1,\r\n            TX_TIMEOUT_SEC: 120\r\n        }\r\n    }\r\n}\r\n\r\nexport const ORION_WS = {\r\n    TEST: {\r\n        BSC: 'wss://testing.orionprotocol.io/bsc-testnet',\r\n        ETH: 'wss://testing.orionprotocol.io/eth-ropsten',\r\n    },\r\n    MAIN: {\r\n        BSC: 'wss://trade-exp.orionprotocol.io',\r\n        ETH: 'wss://trade.orionprotocol.io',\r\n    }\r\n}\r\n\r\nexport const DEFAULT_EXPIRATION: number = 29 * 24 * 60 * 60 * 1000; // 29 days\r\n\r\nexport const ORDER_TYPES = {\r\n    Order: [\r\n        {name: \"senderAddress\", type: \"address\"},\r\n        {name: \"matcherAddress\", type: \"address\"},\r\n        {name: \"baseAsset\", type: \"address\"},\r\n        {name: \"quoteAsset\", type: \"address\"},\r\n        {name: \"matcherFeeAsset\", type: \"address\"},\r\n        {name: \"amount\", type: \"uint64\"},\r\n        {name: \"price\", type: \"uint64\"},\r\n        {name: \"matcherFee\", type: \"uint64\"},\r\n        {name: \"nonce\", type: \"uint64\"},\r\n        {name: \"expiration\", type: \"uint64\"},\r\n        {name: \"buySide\", type: \"uint8\"},\r\n    ],\r\n}\r\n\r\nexport const CANCEL_ORDER_TYPES_V2 = {\r\n    DeleteOrder: [\r\n        {name: \"sender\", type: \"address\"},\r\n        {name: \"id\", type: \"string\"},\r\n    ],\r\n};\r\n\r\nexport const CANCEL_ORDER_TYPES = {\r\n    DeleteOrder: [\r\n        {name: \"senderAddress\", type: \"address\"},\r\n        {name: \"id\", type: \"uint64\"},\r\n    ],\r\n};\r\n\r\nexport const DOMAIN_TYPE = [\r\n    {name: \"name\", type: \"string\"},\r\n    {name: \"version\", type: \"string\"},\r\n    {name: \"chainId\", type: \"uint256\"},\r\n    {name: \"salt\", type: \"bytes32\"},\r\n]\r\n\r\nexport const ORDER_STATUSES = [\r\n    \"NEW\",\r\n    \"ACCEPTED\",\r\n    \"DIRECT_SWAP_PENDING\",\r\n    \"ROUTING\",\r\n    \"PARTIALLY_FILLED\",\r\n    \"FILLED\",\r\n    \"TX_PENDING\",\r\n    \"REJECTED\",\r\n    \"SETTLED\",\r\n    \"CANCELED\",\r\n    \"FAILED\"\r\n]\r\n\r\nexport const NETWORK_TOKEN_ADDRESS = '0x0000000000000000000000000000000000000000'\r\n\r\nexport const PRICE_DEVIATIONS = {\r\n    MIN: 0,\r\n    MAX: 50\r\n}\r\n\r\nexport const EXCHANGE_ORDER_PRECISION = 8\r\n\r\nexport const CHAIN_TX_TYPES: Record<string, TxType> = {\r\n    approve: {\r\n        code: 1,\r\n        name: 'APPROVE'\r\n    },\r\n    deposit: {\r\n        code: 2,\r\n        name: 'DEPOSIT'\r\n    },\r\n    withdraw: {\r\n        code: 3,\r\n        name: 'WITHDRAW'\r\n    },\r\n}\r\n\r\nexport const TEST_WALLET = {\r\n    mnemonicPhrase: 'announce room limb pattern dry unit scale effort smooth jazz weasel alcohol'\r\n}\r\n","import { TxType } from './Models'\r\n\r\nexport class TxError extends Error {\r\n    public txHash: string\r\n    public txCode: number\r\n    public txName: string\r\n\r\n    constructor(txHash: string, type: TxType, message: string) {\r\n        super(message)\r\n        this.txHash = txHash\r\n        this.txCode = type.code\r\n        this.txName = type.name\r\n        this.name = 'Transaction error'\r\n    }\r\n}\r\n","import BigNumber from \"bignumber.js\";\r\nimport { ethers } from \"ethers\";\r\nimport { AxiosResponse, AxiosPromise } from \"axios\"\r\nimport { Dictionary, BlockchainInfo, TradeOrderV2, TradeSubOrderV2,\r\n    TradeOrder, TradeSubOrder, OrderbookItem, Pair, GetFeeArgs, MatcherFeeArgs, OrderbookUpdates, TxType } from \"./Models\";\r\nimport { EXCHANGE_ORDER_PRECISION} from '../utils/Constants'\r\nimport { Chain } from '../services/chain'\r\nimport erc20ABI from '../abis/ERC20.json'\r\nimport { TxError } from './TxError'\r\n\r\nexport function getPriceWithDeviation(price: BigNumber, side: string, deviation: BigNumber): BigNumber {\r\n    const d = deviation.dividedBy(100)\r\n    const percent = (side === 'buy' ? d : d.negated()).plus(1);\r\n    return price.multipliedBy(percent);\r\n}\r\n\r\nexport function sumBigNumber(arr: BigNumber[]): BigNumber {\r\n    let result = new BigNumber(0);\r\n    for (const x of arr) {\r\n        result = result.plus(x);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction toFeePrice(currency: string, nameToPrice: Dictionary<BigNumber>, feeAsset: string): BigNumber {\r\n    const price = nameToPrice[currency].dividedBy(nameToPrice[feeAsset]);\r\n    return price || new BigNumber(0);\r\n}\r\n\r\nfunction calculateMatcherFee({baseAsset, amount, assetsPrices, feePercent, feeAsset}: MatcherFeeArgs): BigNumber {\r\n    const MATCHER_FEE_PERCENT: BigNumber = new BigNumber(feePercent).dividedBy(100);\r\n\r\n    const feeAmount = amount.multipliedBy(MATCHER_FEE_PERCENT);\r\n    const feeToAssetPrice = feeAmount.multipliedBy(toFeePrice(baseAsset, assetsPrices, feeAsset));\r\n\r\n    return feeToAssetPrice;\r\n}\r\n\r\nfunction calculateNetworkFee({\r\n    networkAsset,\r\n    feeAsset,\r\n    gasPriceWei,\r\n    assetsPrices,\r\n    needWithdraw,\r\n    isPool = false,\r\n    limits\r\n}: {\r\n    networkAsset: string,\r\n    feeAsset: string,\r\n    gasPriceWei: string,\r\n    assetsPrices: Dictionary<BigNumber>,\r\n    needWithdraw: boolean,\r\n    isPool: boolean,\r\n    limits: Dictionary<number>\r\n}): { networkFeeEth: BigNumber, networkFee: BigNumber } {\r\n    if (gasPriceWei === 'N/A') return {networkFeeEth: new BigNumber(0), networkFee: new BigNumber(0)};\r\n\r\n    const requiredKeys = ['SWAP_THROUGH_ORION_POOL_GAS_LIMIT', 'FILL_ORDERS_AND_WITHDRAW_GAS_LIMIT', 'FILL_ORDERS_GAS_LIMIT']\r\n    requiredKeys.forEach(key => {\r\n        if (!Object.keys(limits).includes(key)) throw new Error(`${key} in limits is required!`)\r\n    })\r\n\r\n    const { SWAP_THROUGH_ORION_POOL_GAS_LIMIT, FILL_ORDERS_AND_WITHDRAW_GAS_LIMIT, FILL_ORDERS_GAS_LIMIT } = limits\r\n\r\n    const gasPriceEth = new BigNumber(ethers.utils.formatUnits(gasPriceWei, 'ether'));\r\n\r\n    let gasLimit: number;\r\n\r\n    if (isPool) {\r\n        gasLimit = SWAP_THROUGH_ORION_POOL_GAS_LIMIT;\r\n    } else {\r\n        if (needWithdraw) {\r\n            gasLimit = FILL_ORDERS_AND_WITHDRAW_GAS_LIMIT;\r\n        } else {\r\n            gasLimit = FILL_ORDERS_GAS_LIMIT;\r\n        }\r\n    }\r\n    const networkFeeEth = gasPriceEth.multipliedBy(gasLimit);\r\n\r\n    const price = assetsPrices[feeAsset] && assetsPrices[networkAsset]\r\n        ? assetsPrices[networkAsset].dividedBy(assetsPrices[feeAsset])\r\n        : new BigNumber(0);\r\n    const networkFee = networkFeeEth.multipliedBy(price);\r\n\r\n    return {networkFeeEth, networkFee};\r\n}\r\n/*\r\n    getFee return fee value rounded with EXCHANGE_ORDER_PRECISION\r\n*/\r\nexport function getFee ({\r\n    baseAsset,\r\n    amount,\r\n    networkAsset,\r\n    gasPriceWei,\r\n    assetsPrices,\r\n    feePercent,\r\n    feeAsset = 'ORN',\r\n    needWithdraw = false,\r\n    isPool = false,\r\n    limits\r\n}: GetFeeArgs): BigNumber {\r\n    if (!amount || new BigNumber(amount).isNaN() || new BigNumber(amount).lte(0)) throw new Error('amount field is invalid!')\r\n    if (!feePercent || Number.isNaN(Number(feePercent)) || Number(feePercent) <= 0) throw new Error('feePercent field is invalid!')\r\n\r\n    if (!gasPriceWei || new BigNumber(gasPriceWei).isNaN() || new BigNumber(gasPriceWei).lte('0')) {\r\n        throw new Error('gasPriceWei field is invalid!')\r\n    }\r\n\r\n    if (!assetsPrices || !Object.entries(assetsPrices).length) {\r\n        throw new Error('assetsPrices field is invalid!')\r\n    }\r\n    Object.keys(assetsPrices).forEach(key => {\r\n        assetsPrices[key] = new BigNumber(assetsPrices[key])\r\n        if (assetsPrices[key].isNaN() || assetsPrices[key].lte(0)) throw new Error(`assetsPrices.${key} value should be valid BigNumber`)\r\n    })\r\n\r\n    if (!assetsPrices[baseAsset]) throw new Error('baseAsset field is invalid!')\r\n    if (!assetsPrices[feeAsset]) throw new Error('feeAsset field is invalid!')\r\n    if (!assetsPrices[networkAsset]) throw new Error('networkAsset field is invalid!')\r\n\r\n    if (!limits || !Object.keys(limits).length) throw new Error('limits field is required')\r\n    if (!Object.values(limits).every(el => typeof el === 'number' && el > 0)) throw new Error('limits values should be positive numbers')\r\n\r\n    const matcherFee = calculateMatcherFee({ baseAsset, amount, assetsPrices, feePercent, feeAsset })\r\n    const { networkFee } = calculateNetworkFee({ networkAsset, feeAsset, gasPriceWei, assetsPrices, needWithdraw, isPool, limits })\r\n\r\n    if (!matcherFee.gt(0)) throw new Error('matcherFee couldn`t be 0!')\r\n    if (!networkFee.gt(0)) throw new Error('networkFee couldn`t be 0!')\r\n\r\n    const totalFee = matcherFee.plus(networkFee).decimalPlaces(EXCHANGE_ORDER_PRECISION)\r\n\r\n    return totalFee\r\n}\r\n\r\nexport function parseTradeOrder(item: any): TradeOrder {\r\n    const amount = new BigNumber(item.orderQty);\r\n    const price = new BigNumber(item.price);\r\n    const subOrders = item.subOrders ? item.subOrders.map((subOrder: any) => parseTradeSubOrder(subOrder)) : [];\r\n\r\n    const total = amount.multipliedBy(price);\r\n\r\n    return {\r\n        ...{\r\n            date: Number(item.time),\r\n            sender: item.clientId,\r\n            id: Number(item.id),\r\n            type: item.side, // 'buy' / 'sell'\r\n            pair: item.symbol, // 'ETH-BTC'\r\n        },\r\n        blockchainOrder: item?.blockchainOrder,\r\n        status: item.status,\r\n        baseAsset: item.baseAsset,\r\n        quoteAsset: item.quoteAsset,\r\n        feeAsset: item.feeCurrency,\r\n        fee: new BigNumber(item.feeQty),\r\n        side: item.side,\r\n        amount,\r\n        price,\r\n        total,\r\n        subOrders\r\n    };\r\n}\r\n\r\nexport function parseTradeSubOrder(item: any): TradeSubOrder {\r\n    return {\r\n        pair: item.symbol,\r\n        exchange: item.exchange,\r\n        id: Number(item.id),\r\n        amount: new BigNumber(item.subOrdQty),\r\n        price: new BigNumber(item.price),\r\n        status: item.status || 'NEW',\r\n        side: item.side,\r\n        sent: item.sent,\r\n    }\r\n}\r\n\r\nexport function parseTradeOrderV2(item: any): TradeOrderV2 {\r\n    const amount = new BigNumber(item.amount);\r\n    const price = new BigNumber(item.price);\r\n    const [baseAsset, quoteAsset] = item.assetPair.split('-')\r\n    const subOrdersKeys = Object.keys(item.subOrders)\r\n    const subOrders = subOrdersKeys.length ? subOrdersKeys.map((key: any) => parseTradeSubOrderV2(item.subOrders[key])) : [];\r\n\r\n    const total = amount.multipliedBy(price);\r\n\r\n    return {\r\n        ...{\r\n            date: Number(item.creationTime),\r\n            sender: item.sender,\r\n            id: item.id,\r\n            type: item.side, // 'buy' / 'sell'\r\n            pair: item.assetPair, // 'ETH-BTC'\r\n        },\r\n        blockchainOrder: item?.blockchainOrder,\r\n        status: item.status,\r\n        baseAsset,\r\n        quoteAsset,\r\n        feeAsset: item.feeAsset,\r\n        fee: new BigNumber(item.fee),\r\n        amount,\r\n        side: item.side,\r\n        price,\r\n        total,\r\n        subOrders\r\n    };\r\n}\r\n\r\nexport function parseTradeSubOrderV2(item: any): TradeSubOrderV2 {\r\n    return {\r\n        pair: item.assetPair,\r\n        exchange: item.exchange,\r\n        id: Number(item.id),\r\n        amount: new BigNumber(item.amount),\r\n        price: new BigNumber(item.price),\r\n        status: item.status || 'NEW',\r\n        side: item.side,\r\n        tradesInfo: item.tradesInfo\r\n    }\r\n}\r\n\r\nexport function canCancelOrder(order: TradeOrder): boolean {\r\n    return order.status === 'NEW' ||\r\n        order.status === 'ACCEPTED' ||\r\n        order.status === 'ROUTING' ||\r\n        order.status === 'PARTIALLY_FILLED';\r\n}\r\n\r\nexport function isOrderOpen(order: TradeOrder): boolean {\r\n    return order.status === 'NEW' ||\r\n        order.status === 'ACCEPTED' ||\r\n        order.status === 'ROUTING' ||\r\n        order.status === 'PARTIALLY_FILLED' ||\r\n        order.status === 'FILLED' ||\r\n        order.status === 'TX_PENDING' ||\r\n        order.status === 'DIRECT_SWAP_PENDING';\r\n}\r\n\r\nexport function parseOrderbookItem(arr: any): OrderbookItem {\r\n    const price = new BigNumber(arr[0]);\r\n    const size = new BigNumber(arr[1]);\r\n    return {\r\n        price: price,\r\n        size: size,\r\n        total: price.multipliedBy(size),\r\n        cumulativeSize: new BigNumber(0),\r\n        cumulativeTotal: new BigNumber(0),\r\n        avgPrice: new BigNumber(0),\r\n        deltaSize: 0,\r\n        exchanges: (arr[2] as string[])?.map(s => s.toLowerCase())\r\n    }\r\n}\r\n\r\nexport function parseOrderbookItemsV1 (message: {asks: Array<[]>, bids: Array<[]>}): {asks: OrderbookItem[], bids: OrderbookItem[]} {\r\n    const { asks, bids } = message\r\n    return {asks: asks.map(parseOrderbookItem), bids: bids.map(parseOrderbookItem)}\r\n}\r\n\r\nexport function parseOrderbookItemsV2 (message: OrderbookUpdates): {asks: OrderbookItem[], bids: OrderbookItem[]} {\r\n    const { a, b } = message.ob\r\n    return {asks: a.map(parseOrderbookItem), bids: b.map(parseOrderbookItem)}\r\n}\r\n\r\nexport function parsePair(arr: string[]): Pair {\r\n    const name = arr[0]; // \"ETH-BTC\"\r\n    const [fromCurrency, toCurrency] = name.split('-');\r\n    const lastPrice = new BigNumber(arr[1]);\r\n    const openPrice = new BigNumber(arr[2]);\r\n    const change24h = lastPrice.div(openPrice).minus(1).multipliedBy(100);\r\n    const high = new BigNumber(arr[3]);\r\n    const low = new BigNumber(arr[4]);\r\n    const vol24h = new BigNumber(arr[5]);\r\n    return {name, fromCurrency, toCurrency, lastPrice, openPrice, change24h, high, low, vol24h};\r\n}\r\n\r\nexport function parsePairs (data: any[]): Record<string, Pair> {\r\n    const newNameToPair: Record<string, Pair> = {};\r\n\r\n    for (let i = 1; i < data.length; i++) {\r\n        const arr: string[] = data[i];\r\n        const pair = parsePair(arr);\r\n        newNameToPair[pair.name] = pair;\r\n    }\r\n    return newNameToPair\r\n}\r\n\r\nexport function numberToUnit(currency: string, n: BigNumber, blockchainInfo: BlockchainInfo): string {\r\n    if (currency === blockchainInfo.baseCurrencyName) {\r\n        return ethers.utils.parseEther(n.toString()).toString();\r\n    } else {\r\n        const decimals = blockchainInfo.assetToDecimals[currency];\r\n        if (decimals === undefined) throw new Error('no decimals for ' + currency)\r\n        return n.multipliedBy(Math.pow(10, decimals)).toFixed(0, BigNumber.ROUND_DOWN);\r\n    }\r\n}\r\n\r\nexport function  unitToNumber(currency: string, n: BigNumber, blockchainInfo: BlockchainInfo): BigNumber {\r\n    const decimals = currency === blockchainInfo.baseCurrencyName ? 18 : blockchainInfo.assetToDecimals[currency];\r\n    if (decimals === undefined) throw new Error('no decimals for ' + currency)\r\n    return n.dividedBy(Math.pow(10, decimals));\r\n}\r\n\r\nexport function  numberTo8(n: BigNumber.Value): number {\r\n    return Number(new BigNumber(n).multipliedBy(1e8).toFixed(0));\r\n}\r\n\r\nexport async function handleResponse(request: AxiosPromise): Promise<AxiosResponse['data']> {\r\n    try {\r\n        const { data } = await request\r\n        return data\r\n    } catch (error) {\r\n        return Promise.reject(error)\r\n    }\r\n}\r\n\r\nexport async function waitForTx(txResponse: ethers.providers.TransactionResponse, timeoutSec: number, txType: TxType): Promise<string> {\r\n    let txHasResult = false\r\n    const timeoutRunner = setTimeout(() => {\r\n        if (!txHasResult) throw new TxError(txResponse.hash, txType, `Request failed due to exceeding the time limit of ${timeoutSec} seconds!`)\r\n    }, timeoutSec * 1000);\r\n\r\n    const txResult = await txResponse.wait()\r\n    txHasResult = true\r\n    clearTimeout(timeoutRunner)\r\n\r\n    if (txResult.status !== 1) throw new TxError(txResponse.hash, txType, `Request failed with status ${txResult.status}!`)\r\n\r\n    return txResponse.hash\r\n}\r\n\r\nexport function getTokenContracts (chain: Chain): Dictionary<ethers.Contract> {\r\n    const tokensContracts: Dictionary<ethers.Contract> = {};\r\n    const tokens = chain.blockchainInfo.assetToAddress;\r\n    for (const name in tokens) {\r\n        if (name === chain.blockchainInfo.baseCurrencyName) continue;\r\n        const tokenAddress = tokens[name];\r\n        const tokenContract = new ethers.Contract(\r\n            tokenAddress,\r\n            erc20ABI,\r\n            chain.signer\r\n        );\r\n\r\n        tokensContracts[name] = tokenContract;\r\n        tokensContracts[tokenAddress] = tokenContract;\r\n    }\r\n    return tokensContracts\r\n}\r\n","import axios, { AxiosInstance } from \"axios\"\r\nimport { NetworkEntity } from '../utils/Models'\r\n\r\nexport class Api {\r\n    public readonly orionBlockchain!: AxiosInstance\r\n    public readonly orionAggregator!: AxiosInstance\r\n    public readonly binance!: AxiosInstance\r\n\r\n    private static instance: Api;\r\n\r\n    constructor (network: NetworkEntity) {\r\n        if (Api.instance) return Api.instance\r\n\r\n        Api.instance = this\r\n\r\n        this.orionBlockchain = axios.create({\r\n            baseURL: `${network.ORION}/api`,\r\n            timeout: 5000\r\n        })\r\n\r\n        this.orionAggregator = axios.create({\r\n            baseURL: `${network.ORION}/backend/api/v1`,\r\n            timeout: 5000\r\n        })\r\n\r\n        this.binance = axios.create({\r\n            baseURL: network.RPC,\r\n            timeout: 5000\r\n        })\r\n    }\r\n}\r\n","import { ethers } from 'ethers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BlockchainInfo, NetworkEntity, Dictionary } from '../utils/Models'\r\nimport { Tokens } from '../utils/Tokens'\r\nimport { NETWORK, NETWORK_TOKEN_ADDRESS, CHAIN_TX_TYPES } from '../utils/Constants'\r\nimport { handleResponse, getTokenContracts, waitForTx } from '../utils/Helpers'\r\nimport { Api } from './api'\r\n\r\nexport class Chain {\r\n    public readonly provider: ethers.providers.JsonRpcProvider\r\n    public readonly signer: ethers.Wallet\r\n    public readonly api: Api\r\n    public readonly network: NetworkEntity\r\n\r\n    public tokensContracts!: Dictionary<ethers.Contract>;\r\n    private _blockchainInfo!: BlockchainInfo\r\n    private _tokens!: Tokens\r\n    private _isEthereum!: boolean\r\n    private _tokensFee!: Dictionary<string>\r\n    private _baseLimits!: Dictionary<number>\r\n\r\n    constructor(privateKey: string, network: NetworkEntity = NETWORK.TEST.BSC) {\r\n        this.provider = new ethers.providers.JsonRpcProvider(network.RPC);\r\n        this.api = new Api(network)\r\n        const privateKeyFormatted = privateKey.startsWith('0x') ? privateKey : `0x${privateKey}`\r\n        this.signer = new ethers.Wallet(privateKeyFormatted).connect(this.provider)\r\n        this.network = network\r\n    }\r\n\r\n    public async init(): Promise<void> {\r\n        const info = await this.getBlockchainInfo();\r\n        this._tokensFee = await this.getTokensFee()\r\n        this._baseLimits = await this.getBaseLimits()\r\n        info.baseCurrencyName = this.getNetworkAsset(info)\r\n        this._blockchainInfo = info\r\n        this._tokens = new Tokens(this._blockchainInfo.assetToAddress);\r\n        this._isEthereum = this._blockchainInfo.baseCurrencyName === 'ETH'\r\n        this.tokensContracts = getTokenContracts(this)\r\n    }\r\n\r\n    get blockchainInfo(): BlockchainInfo {\r\n        return this._blockchainInfo;\r\n    }\r\n\r\n    get tokens(): Tokens {\r\n        return this._tokens;\r\n    }\r\n\r\n    get baseLimits(): Dictionary<number> {\r\n        return this._baseLimits;\r\n    }\r\n\r\n    get tokensFee(): Dictionary<string> {\r\n        return this._tokensFee\r\n    }\r\n\r\n    get isEthereum(): boolean {\r\n        return this._isEthereum\r\n    }\r\n\r\n    public getTokenAddress(name: string): string {\r\n        return this.blockchainInfo.assetToAddress[name];\r\n    }\r\n\r\n    public getTokenSymbolsList(): string[] {\r\n        return Object.keys(this.blockchainInfo.assetToAddress)\r\n    }\r\n\r\n    public getTokenAddressesList(): string[] {\r\n        return Object.values(this.blockchainInfo.assetToAddress)\r\n    }\r\n\r\n    public tokenAddressToName(address: string): string {\r\n        for (const name in this.blockchainInfo.assetToAddress) {\r\n            if (Object.prototype.hasOwnProperty.call(this.blockchainInfo.assetToAddress, name)) {\r\n                if (this.blockchainInfo.assetToAddress[name] === address.toLowerCase()) return name;\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    public getNetworkAsset (data: BlockchainInfo): string {\r\n        const networkToken = Object.entries(data.assetToAddress).find(el => el[1] === NETWORK_TOKEN_ADDRESS)\r\n        if (!networkToken || !networkToken[0]) throw new Error('Cannot get network token!')\r\n        return networkToken[0]\r\n    }\r\n\r\n    public isNetworkAsset (asset: string): boolean {\r\n        return this.blockchainInfo.baseCurrencyName.toUpperCase() === asset.toUpperCase()\r\n    }\r\n\r\n    public async checkNetworkTokens (): Promise<void> {\r\n        const networkAssetBalance = await this.getNetworkBalance()\r\n        if (!networkAssetBalance.gt(0)) throw new Error('A non-zero balance of network tokens is required!')\r\n    }\r\n\r\n    getBlockchainInfo(): Promise<BlockchainInfo> {\r\n        return handleResponse(this.api.orionBlockchain.get('/info'))\r\n    }\r\n\r\n    getTokensFee(): Promise<Dictionary<string>> {\r\n        return handleResponse(this.api.orionBlockchain.get('/tokensFee'))\r\n    }\r\n\r\n    getBaseLimits(): Promise<Dictionary<number>> {\r\n        return handleResponse(this.api.orionBlockchain.get('/baseLimits'))\r\n    }\r\n\r\n    async getBlockchainPrices(): Promise<Record<string, BigNumber>> {\r\n        try {\r\n            const data = await handleResponse(this.api.orionBlockchain.get('/prices'));\r\n            const result: Record<string, BigNumber> = {};\r\n\r\n            for (const key in data) {\r\n                const assetName = this.tokens.addressToName(key);\r\n                if (assetName) {\r\n                    result[assetName] = new BigNumber(data[key]);\r\n                }\r\n            }\r\n            return result;\r\n        } catch (error) {\r\n            return Promise.reject(error)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @return gasPrice current gas price in wei\r\n     */\r\n    async getGasPrice(): Promise<string> {\r\n        if (this.isEthereum) {\r\n            return this.getGasPriceOB()\r\n        }\r\n        return this.getGasPriceBinance();\r\n    }\r\n\r\n    private async getGasPriceOB(): Promise<string> {\r\n        return handleResponse(this.api.orionBlockchain.get('/gasPrice'))\r\n    }\r\n\r\n    private async getGasPriceBinance(): Promise<string> {\r\n        try {\r\n            const data: { jsonrpc: string, id: number, result: string} = await handleResponse(this.api.binance.post('', {\r\n                jsonrpc: '2.0',\r\n                id: 1,\r\n                method: 'eth_gasPrice',\r\n                params: []\r\n            }))\r\n\r\n            return new BigNumber(data.result).toString()\r\n        } catch (error) {\r\n            return Promise.reject(error)\r\n        }\r\n    }\r\n\r\n    async getNetworkBalance (): Promise<BigNumber> {\r\n        try {\r\n            const wei: ethers.BigNumber = await this.provider.getBalance(this.signer.address);\r\n            return new BigNumber(ethers.utils.formatEther(wei));\r\n        } catch (error) {\r\n            return Promise.reject(error)\r\n        }\r\n    }\r\n\r\n    async getWalletBalance (ticker?: string): Promise<Dictionary<string>> {\r\n        return new Promise((resolve, reject) => {\r\n            if (ticker === this.blockchainInfo.baseCurrencyName) {\r\n                this.getNetworkBalance()\r\n                    .then((balance) => {\r\n                        resolve({ [this.blockchainInfo.baseCurrencyName]: balance.toString() })\r\n                    })\r\n                    .catch(error => reject(error))\r\n            } else {\r\n                const promises: Array<Promise<string[]>> = []\r\n\r\n                try {\r\n                    let tokens = this.getTokenSymbolsList()\r\n\r\n                    if (ticker) {\r\n                        tokens = tokens.filter(el => el === ticker.toUpperCase())\r\n                    }\r\n\r\n                    tokens.forEach(token => {\r\n                        if (token === this.blockchainInfo.baseCurrencyName) return\r\n                        promises.push(this.getTokenBalance(token))\r\n                    })\r\n\r\n                    Promise.all(promises).then((values) => {\r\n                        const result: Dictionary<string> = {}\r\n\r\n                        values.forEach((el: string[]) => {\r\n                            const name = el[0].toString()\r\n                            const value = el[1].toString()\r\n                            result[name] = value\r\n                        })\r\n                        resolve(result)\r\n                    })\r\n                } catch (error) {\r\n                    reject(error)\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    async getTokenBalance (token: string): Promise<string[]> {\r\n        try {\r\n            const balance = await this.tokensContracts[token].balanceOf(this.signer.address)\r\n            return [token, balance.toString()]\r\n        } catch (error) {\r\n            return Promise.reject(error)\r\n        }\r\n    }\r\n\r\n    public async sendTransaction(unsignedTx: ethers.PopulatedTransaction, gasLimit: number, gasPriceWei: BigNumber): Promise<ethers.providers.TransactionResponse> {\r\n        try {\r\n            if(gasLimit > 0) unsignedTx.gasLimit = ethers.BigNumber.from(gasLimit);\r\n            unsignedTx.gasPrice = ethers.BigNumber.from(gasPriceWei.toString());\r\n            const unsignedRequest: ethers.providers.TransactionRequest = await this.signer.populateTransaction(unsignedTx); // NOTE: validate transaction when estimate gas\r\n            return this.signer.sendTransaction(unsignedRequest);\r\n        } catch (error) {\r\n            return Promise.reject(error)\r\n        }\r\n    }\r\n\r\n    async getAllowance( currency: string, toAddress?: string ): Promise<BigNumber> {\r\n        try {\r\n            const decimals = this.blockchainInfo.assetToDecimals[currency]\r\n            const currentTokenContract = this.tokensContracts[currency]\r\n\r\n            if(!decimals || !currentTokenContract) throw new Error('Currency is invaild!')\r\n\r\n            if (!toAddress) {\r\n                toAddress = this.blockchainInfo.exchangeContractAddress;\r\n            }\r\n            const unit: ethers.BigNumber = await currentTokenContract.allowance(this.signer.address, toAddress);\r\n            return new BigNumber(unit.toString()).dividedBy(10 ** decimals);\r\n        } catch (error) {\r\n            return Promise.reject(error)\r\n        }\r\n    }\r\n\r\n    async allowanceHandler (currency: string, amount: string, gasPriceWei: string): Promise<string | void> {\r\n        if (this.isNetworkAsset(currency)) return\r\n\r\n        try {\r\n            const bignumberAmount = new BigNumber(amount)\r\n            const tokenContract = this.tokensContracts[currency]\r\n\r\n            const allowance = await this.getAllowance(currency)\r\n\r\n            if (allowance.lt(bignumberAmount)) {\r\n                const needReset = await this.checkNeedZeroReset(tokenContract)\r\n\r\n                if (needReset) {\r\n                    await this.approve(currency, ethers.constants.Zero.toString(), gasPriceWei)\r\n                    return this.approve(currency, ethers.constants.MaxUint256.toString(), gasPriceWei)\r\n                } else {\r\n                    return this.approve(currency, ethers.constants.MaxUint256.toString(), gasPriceWei)\r\n                }\r\n            }\r\n        } catch (error) {\r\n            return Promise.reject(error)\r\n        }\r\n    }\r\n\r\n    private async checkNeedZeroReset (contract: ethers.Contract): Promise<boolean> {\r\n        const unsignedTx = await contract.populateTransaction.approve(\r\n            this.signer.address,\r\n            ethers.constants.MaxUint256,\r\n        );\r\n        try {\r\n            await this.signer.estimateGas(unsignedTx);\r\n            return false;\r\n        } catch (e) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    async approve(currency: string, amountUnit: string, gasPriceWei?: string): Promise<string> {\r\n        try {\r\n            await this.checkNetworkTokens()\r\n\r\n            const gasPriceWeiLocal = gasPriceWei ? gasPriceWei : await this.getGasPrice()\r\n\r\n            const tokenContract = this.tokensContracts[currency]\r\n\r\n            const toAddress = this.blockchainInfo.exchangeContractAddress;\r\n\r\n            return this.approveERC20({\r\n                amountUnit,\r\n                gasPriceWei: gasPriceWeiLocal,\r\n                toAddress,\r\n                tokenContract,\r\n            });\r\n        } catch (error) {\r\n            return Promise.reject(error)\r\n        }\r\n    }\r\n\r\n    private async approveERC20({amountUnit, gasPriceWei, toAddress, tokenContract}: {\r\n        amountUnit: string,\r\n        gasPriceWei: string,\r\n        toAddress: string,\r\n        tokenContract: ethers.Contract\r\n    }): Promise<string> {\r\n        try {\r\n            const unsignedTx = await tokenContract.populateTransaction.approve(toAddress, amountUnit);\r\n            const txResponse = await this.sendTransaction(\r\n                unsignedTx,\r\n                this.baseLimits.APPROVE_ERC20_GAS_LIMIT,\r\n                new BigNumber(gasPriceWei),\r\n            )\r\n\r\n            return waitForTx(txResponse, this.network.TX_TIMEOUT_SEC, CHAIN_TX_TYPES.approve)\r\n        } catch (error) {\r\n            return Promise.reject(error)\r\n        }\r\n    }\r\n}\r\n","import BigNumber from \"bignumber.js\"\r\nimport { ethers } from \"ethers\"\r\nimport { BlockchainOrder, Dictionary, BalanceContract } from '../utils/Models'\r\nimport { CHAIN_TX_TYPES, EXCHANGE_ORDER_PRECISION } from '../utils/Constants'\r\nimport { Chain } from './chain'\r\nimport exchangeABI from '../abis/Exchange.json'\r\nimport { numberToUnit, unitToNumber, handleResponse, waitForTx } from '../utils/Helpers'\r\n\r\nexport class Exchange {\r\n    public readonly chain: Chain;\r\n    public exchangeContract!: ethers.Contract;\r\n\r\n    constructor(chain: Chain) {\r\n        this.chain = chain\r\n\r\n        this.exchangeContract = new ethers.Contract(\r\n            this.chain.blockchainInfo.exchangeContractAddress,\r\n            exchangeABI,\r\n            this.chain.signer\r\n        );\r\n    }\r\n\r\n    async getContractBalance(tokenSymbol?: string): Promise<Dictionary<BalanceContract>> {\r\n        const token = tokenSymbol ? tokenSymbol.toUpperCase() : ''\r\n\r\n        try {\r\n            if (token && !this.chain.getTokenSymbolsList().includes(token)) throw new Error('Invalid token')\r\n\r\n            const result: Dictionary<BalanceContract> = {}\r\n\r\n            const tokenAddresses = token\r\n                ? [this.chain.getTokenAddress(token)]\r\n                : this.chain.getTokenAddressesList()\r\n\r\n            const tokens = token ? [token] : this.chain.getTokenSymbolsList()\r\n\r\n            const total: BigNumber[] = await this.exchangeContract.getBalances(tokenAddresses, this.chain.signer.address)\r\n            const locked = await this.checkReservedBalance(this.chain.signer.address)\r\n\r\n            total.forEach((totalBalance, i) => {\r\n                const lockedValue = locked[tokens[i]] || 0\r\n                result[tokens[i]] = this.parseContractBalance(totalBalance, lockedValue)\r\n            })\r\n\r\n            return result\r\n        } catch (error) {\r\n            return Promise.reject(error)\r\n        }\r\n    }\r\n\r\n    public async checkReservedBalance(walletAddress: string, asset = ''): Promise<Dictionary<string>> {\r\n        const path = `/address/balance/reserved/${asset}?address=${walletAddress}`\r\n\r\n        return handleResponse(this.chain.api.orionAggregator.get(path))\r\n    }\r\n\r\n    private parseContractBalance(total8: BigNumber, locked: string | number): BalanceContract {\r\n        const total = ethers.utils.formatUnits(ethers.BigNumber.from(total8.toString()), EXCHANGE_ORDER_PRECISION)\r\n        const totalBN = new BigNumber(total)\r\n        const lockedBN = new BigNumber(locked)\r\n\r\n        const availableBN = totalBN.minus(lockedBN)\r\n\r\n        const balanceSummary = {\r\n            total: totalBN,\r\n            locked: lockedBN,\r\n            available: availableBN\r\n        }\r\n\r\n        return balanceSummary\r\n    }\r\n\r\n    private async depositETH(amountUnit: string, gasPriceWei: BigNumber): Promise<string> {\r\n        const unsignedTx: ethers.PopulatedTransaction = await this.exchangeContract.populateTransaction.deposit();\r\n        unsignedTx.value = ethers.BigNumber.from(amountUnit);\r\n        const txResponse = await this.chain.sendTransaction(\r\n            unsignedTx,\r\n            this.chain.baseLimits.DEPOSIT_ETH_GAS_LIMIT,\r\n            gasPriceWei\r\n        )\r\n\r\n        return waitForTx(txResponse, this.chain.network.TX_TIMEOUT_SEC, CHAIN_TX_TYPES.deposit)\r\n    }\r\n\r\n    private async depositERC20(currency: string, amountUnit: string, gasPriceWei: BigNumber): Promise<string> {\r\n        const txResponse = await this.chain.sendTransaction(\r\n            await this.exchangeContract.populateTransaction.depositAsset(this.chain.getTokenAddress(currency), amountUnit),\r\n            this.chain.baseLimits.DEPOSIT_ERC20_GAS_LIMIT,\r\n            gasPriceWei\r\n        )\r\n\r\n        return waitForTx(txResponse, this.chain.network.TX_TIMEOUT_SEC, CHAIN_TX_TYPES.deposit)\r\n    }\r\n\r\n    async deposit(currency: string, amount: string, gasPriceWei?: string): Promise<string> {\r\n        try {\r\n            await this.chain.checkNetworkTokens()\r\n\r\n            const bignumberAmount = new BigNumber(amount)\r\n            const amountUnit = numberToUnit(currency, bignumberAmount, this.chain.blockchainInfo);\r\n\r\n            const walletBalanceUint = await this.chain.getWalletBalance(currency)\r\n            const walletBalance = unitToNumber(currency, new BigNumber(walletBalanceUint[currency]), this.chain.blockchainInfo)\r\n\r\n            if (walletBalance.lt(bignumberAmount)) throw new Error(`The wallet balance (${walletBalance}) is lower than the deposit amount (${amount})!`)\r\n\r\n            const gasPriceWeiLocal = gasPriceWei ? gasPriceWei : await this.chain.getGasPrice()\r\n\r\n            if (this.chain.isNetworkAsset(currency)) {\r\n                return this.depositETH(amountUnit, new BigNumber(gasPriceWeiLocal))\r\n            } else {\r\n                await this.chain.allowanceHandler(currency, amount, gasPriceWeiLocal)\r\n                return this.depositERC20(currency, amountUnit, new BigNumber(gasPriceWeiLocal))\r\n            }\r\n        } catch (error) {\r\n            return Promise.reject(error)\r\n        }\r\n    }\r\n\r\n    async withdraw(currency: string, amount: string, gasPriceWei?: string): Promise<string> {\r\n        try {\r\n            await this.chain.checkNetworkTokens()\r\n\r\n            const amountUnit = numberToUnit(currency, new BigNumber(amount), this.chain.blockchainInfo);\r\n            const balance = await this.getContractBalance(currency)\r\n            const gasPriceWeiLocal = gasPriceWei ? gasPriceWei : await this.chain.getGasPrice()\r\n\r\n            if (balance[currency].available.lt(new BigNumber(amount))) throw new Error(`The available contract balance (${balance[currency].available}) is less than the withdrawal amount (${new BigNumber(amount)})! `)\r\n\r\n            const txResponse = await this.chain.sendTransaction(\r\n                await this.exchangeContract.populateTransaction.withdraw(this.chain.getTokenAddress(currency), amountUnit),\r\n                this.chain.baseLimits.WITHDRAW_GAS_LIMIT,\r\n                new BigNumber(gasPriceWeiLocal),\r\n            );\r\n\r\n            return waitForTx(txResponse, this.chain.network.TX_TIMEOUT_SEC, CHAIN_TX_TYPES.withdraw)\r\n        } catch (error) {\r\n            return Promise.reject(error)\r\n        }\r\n    }\r\n\r\n    async validateOrder(order: BlockchainOrder): Promise<boolean> {\r\n        return this.exchangeContract.validateOrder(order);\r\n    }\r\n}\r\n\r\n","import { signTypedMessage } from 'eth-sig-util'\r\nimport {ethers} from \"ethers\"\r\nimport { BlockchainOrder, CancelOrderRequest, CancelOrderRequestV2, DomainData} from \"../utils/Models\"\r\nimport { DOMAIN_TYPE, ORDER_TYPES, CANCEL_ORDER_TYPES_V2 } from '../utils/Constants'\r\n\r\nfunction getDomainData(chainId: number): DomainData {\r\n    return {\r\n        name: \"Orion Exchange\",\r\n        version: \"1\",\r\n        chainId: chainId,\r\n        salt: \"0xf2d857f4a3edcb9b78b4d503bfe733db1e3f6cdc2b7971ee739626c97e86a557\",\r\n    };\r\n}\r\n\r\nexport async function signCancelOrder(cancelOrderRequest: CancelOrderRequest | CancelOrderRequestV2, signer: ethers.Wallet, chainId: number): Promise<string> {\r\n    if (signer.privateKey) {\r\n\r\n        const data = {\r\n            types: {\r\n                EIP712Domain: DOMAIN_TYPE,\r\n                DeleteOrder: CANCEL_ORDER_TYPES_V2.DeleteOrder,\r\n            },\r\n            domain: getDomainData(chainId),\r\n            primaryType: 'DeleteOrder',\r\n            message: cancelOrderRequest,\r\n        };\r\n\r\n        const msgParams = {data};\r\n        const bufferKey = Buffer.from(signer.privateKey.substr(2), 'hex');\r\n        return signTypedMessage(bufferKey, msgParams as any, 'V4');\r\n    } else {\r\n        throw new Error('privateKey is required!')\r\n    }\r\n}\r\n\r\nexport async function signOrder(order: BlockchainOrder, signer: ethers.Wallet, chainId: number): Promise<string> {\r\n\r\n    if (signer.privateKey) {\r\n        const data = {\r\n            types: {\r\n                EIP712Domain: DOMAIN_TYPE,\r\n                Order: ORDER_TYPES.Order,\r\n            },\r\n            domain: getDomainData(chainId),\r\n            primaryType: 'Order',\r\n            message: order,\r\n        };\r\n\r\n        const msgParams = {data};\r\n        const bufferKey = Buffer.from((signer).privateKey.substr(2), 'hex');\r\n        return signTypedMessage(bufferKey, msgParams as any, 'V4');\r\n    } else {\r\n        throw new Error('privateKey is required!')\r\n    }\r\n}\r\n\r\nexport function hashOrder(order: BlockchainOrder): string {\r\n    return ethers.utils.solidityKeccak256(\r\n        [\r\n            'uint8',\r\n            'address',\r\n            'address',\r\n            'address',\r\n            'address',\r\n            'address',\r\n            'uint64',\r\n            'uint64',\r\n            'uint64',\r\n            'uint64',\r\n            'uint64',\r\n            'uint8',\r\n        ],\r\n        [\r\n            \"0x03\",\r\n            order.senderAddress,\r\n            order.matcherAddress,\r\n            order.baseAsset,\r\n            order.quoteAsset,\r\n            order.matcherFeeAsset,\r\n            order.amount,\r\n            order.price,\r\n            order.matcherFee,\r\n            order.nonce,\r\n            order.expiration,\r\n            order.buySide ? '0x01' : '0x00'\r\n        ]\r\n    )\r\n}\r\n","import BigNumber from \"bignumber.js\";\r\n\r\nexport interface Dictionary<T> {\r\n    [key: string]: T;\r\n}\r\n\r\nexport interface BlockchainInfo {\r\n    baseCurrencyName: string;\r\n    chainId: number;\r\n    chainName: string;\r\n    exchangeContractAddress: string;\r\n    matcherAddress: string;\r\n    assetToAddress: Dictionary<string>;\r\n    assetToDecimals: Dictionary<number>;\r\n    assetToIcons: Dictionary<string>;\r\n}\r\nexport interface SignOrderModel {\r\n    fromCurrency: string,\r\n    toCurrency: string,\r\n    feeCurrency: string,\r\n    side: string,\r\n    price: BigNumber,\r\n    amount: BigNumber,\r\n    priceDeviation: BigNumber,\r\n    numberFormat: NumberFormat,\r\n    needWithdraw: boolean,\r\n    chainPrices?: {     // in case if user already knows chain prices\r\n        gasWei: string,\r\n        baseAsset: string | number,\r\n        networkAsset:  string | number,\r\n        feeAsset: string | number\r\n    }\r\n}\r\n\r\nexport interface SignOrderModelRaw {\r\n    fromCurrency: string,\r\n    toCurrency: string,\r\n    feeCurrency: string,\r\n    side: string,\r\n    price: number,\r\n    amount: number,\r\n    priceDeviation?: number,\r\n    needWithdraw?: boolean,\r\n    chainPrices?: {  // in case if user already knows chain prices\r\n        gasWei: string,\r\n        baseAsset: string | number,\r\n        networkAsset: string | number,\r\n        feeAsset: string | number,\r\n    }\r\n}\r\n\r\nexport interface BlockchainOrder {\r\n    id: string; // hash of BlockchainOrder (it's not part of order structure in smart-contract)\r\n\r\n    senderAddress: string; // address\r\n    matcherAddress: string; // address\r\n    baseAsset: string; // address\r\n    quoteAsset: string; // address\r\n    matcherFeeAsset: string; // address\r\n    amount: number; // uint64\r\n    price: number; // uint64\r\n    matcherFee: number; // uint64\r\n    nonce: number; // uint64\r\n    expiration: number; // uint64\r\n    buySide: number; // uint8, 1=buy, 0=sell\r\n    isPersonalSign: boolean; // bool\r\n    signature: string; // bytes\r\n    needWithdraw?: boolean; // bool (not supported yet by smart-contract)\r\n}\r\n\r\nexport interface NumberFormat {\r\n    name: string;\r\n    minQty: number; // validating order amount\r\n    maxQty: number;\r\n    minPrice: number;  // validating order price\r\n    maxPrice: number;\r\n    pricePrecision: number; // formatting price\r\n    qtyPrecision: number; // formatting amount\r\n    baseAssetPrecision: number; // fromCurrency\r\n    quoteAssetPrecision: number; // formatting totals / toCurrency\r\n    limitOrderThreshold?: number;\r\n    executableOnBrokersPriceDeviation?: number;\r\n}\r\n\r\nexport const DEFAULT_NUMBER_FORMAT: NumberFormat = {\r\n    \"name\": \"ETH-BTC\",\r\n    \"minQty\": 0,\r\n    \"maxQty\": Number.MAX_VALUE,\r\n    \"minPrice\": 0,\r\n    \"maxPrice\": Number.MAX_VALUE,\r\n    \"pricePrecision\": 8,\r\n    \"qtyPrecision\": 8,\r\n    \"baseAssetPrecision\": 8,\r\n    \"quoteAssetPrecision\": 8,\r\n    \"limitOrderThreshold\": 0.001,\r\n    \"executableOnBrokersPriceDeviation\": 0.001\r\n}\r\n\r\nexport interface CancelOrderRequestV2 {\r\n    id: number | string;\r\n    sender: string;\r\n    signature: string;\r\n    isPersonalSign: boolean;\r\n}\r\n\r\nexport interface CancelOrderRequest {\r\n    id: number | string;\r\n    senderAddress: string;\r\n    signature: string;\r\n    isPersonalSign: boolean;\r\n}\r\n\r\nexport enum Side {\r\n    BUY = 'buy',\r\n    SELL = 'sell',\r\n}\r\nexport interface OrderData {\r\n    price: BigNumber;\r\n    amount: BigNumber;\r\n    total: BigNumber;\r\n    isAsk: boolean;\r\n}\r\nexport interface Transaction {\r\n    type: 'deposit' | 'withdrawal';\r\n    date: number; // in millis\r\n    token: string;\r\n    amount: BigNumber;\r\n    status: 'Pending' | 'Done' | 'Bridge' | 'Approving' | 'Cancelled';\r\n    transactionHash: string;\r\n    user: string;\r\n    chainId?: number,\r\n    bridgeOrderId?: string;\r\n    bridgeDepositAddress?: string;\r\n    nativeWithdrawAddress?: string;\r\n    bridgeDepositAmount?: BigNumber; // full amount to deposit to bridge\r\n}\r\n\r\nexport type SubOrderStatus =\r\n    'NEW'\r\n    | 'ACCEPTED'\r\n    | 'REJECTED'\r\n    | 'VALIDATION_FAILED'\r\n    | 'FILLED'\r\n    | 'TX_PENDING'\r\n    | 'CANCELED'\r\n    | 'FAILED'\r\n    | 'SETTLED';\r\n\r\n\r\nexport interface TradeSubOrder {\r\n    amount: BigNumber;\r\n    exchange: string;\r\n    id: number;\r\n    price: BigNumber;\r\n    status: SubOrderStatus;\r\n    side: Side;\r\n    sent: boolean;\r\n    pair: string;\r\n}\r\nexport interface TradeSubOrderV2 {\r\n    amount: BigNumber;\r\n    exchange: string;\r\n    id: number;\r\n    price: BigNumber;\r\n    status: SubOrderStatus;\r\n    side: Side;\r\n    tradesInfo: Dictionary<string | number | boolean>;\r\n    pair: string,\r\n}\r\n\r\nexport type OrderStatus =\r\n  | \"NEW\"\r\n  | \"ACCEPTED\"\r\n  | \"DIRECT_SWAP_PENDING\"\r\n  | \"ROUTING\"\r\n  | \"PARTIALLY_FILLED\"\r\n  | \"FILLED\"\r\n  | \"TX_PENDING\"\r\n  | \"REJECTED\"\r\n  | \"SETTLED\"\r\n  | \"CANCELED\"\r\n  | \"FAILED\";\r\n\r\nexport interface TradeOrder {\r\n    blockchainOrder: BlockchainOrder,\r\n    id: number;\r\n    sender: string;\r\n    baseAsset: string;\r\n    quoteAsset: string;\r\n    feeAsset: string;\r\n    fee: BigNumber;\r\n    date: number;\r\n    pair: string;\r\n    amount: BigNumber;\r\n    price: BigNumber;\r\n    side: Side;\r\n    status: OrderStatus;\r\n    subOrders: TradeSubOrder[];\r\n    total: BigNumber;\r\n}\r\n\r\nexport interface TradeOrderV2 {\r\n    pair: string;\r\n    baseAsset: string;\r\n    quoteAsset: string;\r\n    feeAsset: string;\r\n    blockchainOrder: BlockchainOrder,\r\n    status: OrderStatus;\r\n    sender: string;\r\n    date: number;\r\n    id: string;\r\n    side: string;\r\n    amount: BigNumber;\r\n    price: BigNumber;\r\n    fee: BigNumber;\r\n    subOrders: TradeSubOrderV2[];\r\n    total: BigNumber;\r\n}\r\n\r\nexport interface HistoryParams {\r\n    baseAsset?: string;\r\n    quoteAsset?: string;\r\n    startTime?: number;\r\n    endTime?: number;\r\n    limit?: number;\r\n}\r\n\r\nexport interface DomainData {\r\n    name: string;\r\n    version: string;\r\n    chainId: number;\r\n    salt: string;\r\n}\r\n\r\nexport interface OrderbookItem {\r\n    price: BigNumber;\r\n    size: BigNumber;\r\n    total: BigNumber;\r\n    cumulativeSize: BigNumber;\r\n    cumulativeTotal: BigNumber;\r\n    avgPrice: BigNumber;\r\n    deltaSize: number;\r\n    exchanges: string[];\r\n}\r\n\r\nexport interface Pair {\r\n    name: string;\r\n    fromCurrency: string;\r\n    toCurrency: string;\r\n    lastPrice: BigNumber;\r\n    openPrice: BigNumber;\r\n    change24h: BigNumber;\r\n    high: BigNumber;\r\n    low: BigNumber;\r\n    vol24h: BigNumber;\r\n}\r\n\r\nexport interface NetworkEntity {\r\n    RPC: string,\r\n    ORION: string,\r\n    CHAIN_ID: number,\r\n    TX_TIMEOUT_SEC: number\r\n}\r\n\r\nexport interface BalanceContract {\r\n    total: BigNumber,\r\n    locked: BigNumber,\r\n    available: BigNumber\r\n}\r\n\r\nexport interface GetFeeArgs {\r\n    baseAsset: string;\r\n    amount: BigNumber;\r\n    networkAsset: string;\r\n    gasPriceWei: string;\r\n    assetsPrices: Dictionary<BigNumber>;\r\n    needWithdraw: boolean;\r\n    isPool: boolean;\r\n    feePercent: string;\r\n    feeAsset: string;\r\n    limits: Dictionary<number>;\r\n}\r\n\r\nexport interface MatcherFeeArgs {\r\n    baseAsset: string;\r\n    amount: BigNumber;\r\n    assetsPrices: Dictionary<BigNumber>;\r\n    feePercent: string;\r\n    feeAsset: string;\r\n}\r\n\r\nexport interface PairConfig {\r\n    name: string;\r\n    minQty: number; // validating order amount\r\n    maxQty: number;\r\n    minPrice: number; // validating order price\r\n    maxPrice: number;\r\n    pricePrecision: number; // formatting price\r\n    qtyPrecision: number; // formatting amount\r\n    baseAssetPrecision: number; // fromCurrency\r\n    quoteAssetPrecision: number; // formatting totals / toCurrency\r\n    limitOrderThreshold?: number;\r\n    executableOnBrokersPriceDeviation?: number;\r\n}\r\n\r\nexport interface OrderbookUpdates {\r\n    T: string,\r\n    _: number\r\n    S: string,\r\n    ob: {\r\n        a: [][],\r\n        b: [][]\r\n    }\r\n}\r\nexport interface TxType {\r\n    code: number;\r\n    name: string;\r\n}\r\n","import BigNumber from \"bignumber.js\"\r\nimport { BlockchainOrder, SignOrderModel, SignOrderModelRaw, TradeOrder, PairConfig, TradeOrderV2,\r\n    CancelOrderRequestV2, HistoryParams } from \"../utils/Models\"\r\nimport { getPriceWithDeviation, getFee, numberTo8, handleResponse, parseTradeOrderV2} from '../utils/Helpers'\r\nimport { DEFAULT_EXPIRATION, PRICE_DEVIATIONS } from '../utils/Constants'\r\nimport { hashOrder, signOrder, signCancelOrder } from './crypto'\r\nimport { Chain } from './chain'\r\nimport { Exchange } from './exchange'\r\n\r\nexport class OrionAggregator {\r\n    public readonly chain: Chain;\r\n    public readonly exchange: Exchange;\r\n\r\n    constructor(chain: Chain) {\r\n        this.chain = chain\r\n        this.exchange = new Exchange(chain)\r\n    }\r\n\r\n    public async init(): Promise<boolean> {\r\n        console.warn('OrionAggregator.init() method is currently deprecated and unnecessary')\r\n        return new Promise(resolve => resolve(true))\r\n    }\r\n\r\n    public async getPairsInfo (): Promise<Record<string, PairConfig>> {\r\n        try {\r\n            const data: PairConfig[] = await handleResponse(this.chain.api.orionAggregator.get('/pairs/exchangeInfo'))\r\n            const pairConfigs: Record<string, PairConfig> = {};\r\n            data.forEach((item) => {\r\n                pairConfigs[item.name] = item;\r\n            });\r\n            return pairConfigs\r\n        } catch (error) {\r\n            return Promise.reject(error)\r\n        }\r\n    }\r\n\r\n    private async checkBalanceForOrder (order: SignOrderModel, feeAsset: string, feeAmount: BigNumber): Promise<void> {\r\n        try {\r\n            const asset = order.side === 'buy' ? order.toCurrency.toUpperCase() : order.fromCurrency.toUpperCase()\r\n            const amount = order.side === 'buy' ? order.amount.multipliedBy(order.price) : order.amount\r\n            const balance = await this.exchange.getContractBalance()\r\n\r\n            if (asset === feeAsset) {\r\n                if (balance[asset].available.lt(amount.plus(feeAmount))) {\r\n                    throw new Error(`The available contract balance (${balance[asset].available} ${asset}) is less than the order amount+fee (${amount.plus(feeAmount)} ${asset})!`)\r\n                }\r\n            } else {\r\n                if (balance[asset].available.lt(amount)) {\r\n                    throw new Error(`The available contract balance (${balance[asset].available} ${asset}) is less than the order amount (${amount} ${asset})!`)\r\n                }\r\n\r\n                if (balance[feeAsset].available.lt(feeAmount)) {\r\n                    throw new Error(`The available contract balance (${balance[feeAsset].available} ${feeAsset}) is less than the order fee amount (${feeAmount} ${feeAsset})!`)\r\n                }\r\n            }\r\n        } catch (error) {\r\n            return Promise.reject(error)\r\n        }\r\n    }\r\n\r\n    private async formatRawOrder (order: SignOrderModelRaw): Promise<SignOrderModel> {\r\n        const pair = `${order.fromCurrency.toUpperCase()}-${order.toCurrency.toUpperCase()}`\r\n        const pairs = await this.getPairsInfo()\r\n        const pairConfig = pairs[pair]\r\n        if (!pairConfig) throw new Error(`No such pair ${pair}`)\r\n\r\n        if (order.priceDeviation && (new BigNumber(PRICE_DEVIATIONS.MIN).gt(order.priceDeviation) || new BigNumber(PRICE_DEVIATIONS.MAX).lt(order.priceDeviation) ) )\r\n            throw new Error(`priceDeviation value should between ${PRICE_DEVIATIONS.MIN} and ${PRICE_DEVIATIONS.MAX}`);\r\n\r\n        const formattedOrder: SignOrderModel = Object.assign(order, {\r\n            numberFormat: pairConfig,\r\n            price: new BigNumber(order.price),\r\n            amount: new BigNumber(order.amount),\r\n            priceDeviation: new BigNumber(order.priceDeviation!==undefined ? order.priceDeviation : 0),\r\n            needWithdraw: order.needWithdraw || false // set to false by default, because this feature isn't ready\r\n        })\r\n\r\n        return formattedOrder\r\n    }\r\n\r\n    public async createOrder(orderParams: SignOrderModelRaw): Promise<BlockchainOrder> {\r\n        try {\r\n            const params = await this.formatRawOrder(orderParams)\r\n            const baseAsset: string = this.chain.getTokenAddress(params.fromCurrency);\r\n            const quoteAsset: string = this.chain.getTokenAddress(params.toCurrency);\r\n            const matcherFeeAsset: string = this.chain.getTokenAddress(params.feeCurrency);\r\n            const nonce: number = Date.now();\r\n\r\n            if (!['buy', 'sell'].includes(params.side)) throw new Error('Invalid side, should be buy | sell');\r\n            if (!params.price.gt(0)) throw new Error('Invalid price');\r\n            if (!params.amount.gt(0)) throw new Error('Invalid amount');\r\n            if (!params.priceDeviation.gte(0)) throw new Error('Invalid priceDeviation');\r\n            if (!this.chain.tokensFee[params.feeCurrency]) throw new Error(`Invalid feeCurrency, should be one of ${Object.keys(this.chain.tokensFee)}`);\r\n\r\n            if (params.numberFormat.qtyPrecision === undefined || params.numberFormat.qtyPrecision === null) throw new Error('Invalid qtyPrecision');\r\n            if (params.numberFormat.pricePrecision === undefined || params.numberFormat.pricePrecision === null) throw new Error('Invalid pricePrecision');\r\n\r\n            let gasPriceWei, blockchainPrices\r\n\r\n            if (params.chainPrices) {\r\n                gasPriceWei = params.chainPrices.gasWei\r\n\r\n                blockchainPrices = {\r\n                    [this.chain.blockchainInfo.baseCurrencyName]: new BigNumber(params.chainPrices.networkAsset),\r\n                    [params.fromCurrency]: new BigNumber(params.chainPrices.baseAsset),\r\n                    [params.feeCurrency]: new BigNumber(params.chainPrices.feeAsset),\r\n                }\r\n\r\n                if (!blockchainPrices[this.chain.blockchainInfo.baseCurrencyName].gt(0)) throw new Error('Invalid chainPrices networkAsset')\r\n                if (!blockchainPrices[params.fromCurrency].gt(0)) throw new Error('Invalid chainPrices baseAsset')\r\n                if (!blockchainPrices[params.feeCurrency].gt(0)) throw new Error('Invalid chainPrices feeAsset')\r\n            } else {\r\n                gasPriceWei = await this.chain.getGasPrice();\r\n                blockchainPrices = await this.chain.getBlockchainPrices()\r\n            }\r\n\r\n            const totalFee = getFee({\r\n                baseAsset: params.fromCurrency,\r\n                amount: params.amount,\r\n                feePercent: this.chain.tokensFee[params.feeCurrency],\r\n                assetsPrices: blockchainPrices,\r\n                networkAsset: this.chain.blockchainInfo.baseCurrencyName,\r\n                gasPriceWei,\r\n                needWithdraw: params.needWithdraw,\r\n                isPool: false,\r\n                feeAsset: params.feeCurrency,\r\n                limits: this.chain.baseLimits\r\n            })\r\n\r\n            const priceWithDeviation = params.priceDeviation.isZero() ? params.price : getPriceWithDeviation(params.price, params.side, params.priceDeviation);\r\n\r\n            const amountRounded: BigNumber = params.amount.decimalPlaces(params.numberFormat.qtyPrecision, BigNumber.ROUND_DOWN);\r\n            const priceRounded: BigNumber = priceWithDeviation.decimalPlaces(params.numberFormat.pricePrecision, params.side === 'buy' ? BigNumber.ROUND_UP : BigNumber.ROUND_DOWN);\r\n\r\n            if (totalFee.isZero()) throw new Error('Zero fee');\r\n\r\n            await this.checkBalanceForOrder(params, params.feeCurrency, totalFee)\r\n\r\n            const order: BlockchainOrder = {\r\n                id: '',\r\n                senderAddress: this.chain.signer.address,\r\n                matcherAddress: this.chain.blockchainInfo.matcherAddress,\r\n                baseAsset: baseAsset,\r\n                quoteAsset: quoteAsset,\r\n                matcherFeeAsset: matcherFeeAsset,\r\n                amount: numberTo8(amountRounded),\r\n                price: numberTo8(priceRounded),\r\n                matcherFee: numberTo8(totalFee),\r\n                nonce: nonce,\r\n                expiration: nonce + DEFAULT_EXPIRATION,\r\n                buySide: params.side === 'buy' ? 1 : 0,\r\n                isPersonalSign: false,\r\n                signature: '',\r\n                needWithdraw: params.needWithdraw\r\n            }\r\n\r\n            order.id = hashOrder(order);\r\n            order.signature = await signOrder(order, this.chain.signer, this.chain.network.CHAIN_ID);\r\n            if (!(await this.exchange.validateOrder(order))) {\r\n                throw new Error('Order validation failed');\r\n            }\r\n            return order;\r\n        } catch (error) {\r\n            return Promise.reject(error)\r\n        }\r\n    }\r\n\r\n    public async sendOrder(order: BlockchainOrder, isCreateInternalOrder = false): Promise<{orderId: string | number}> {\r\n        const internalRoute = '/order/internal'\r\n        return handleResponse(this.chain.api.orionAggregator.post(isCreateInternalOrder ? internalRoute : '/order', order))\r\n    }\r\n\r\n    public async cancelOrder(orderId: string | number): Promise<{orderId: string | number}> {\r\n        try {\r\n            const order = await this.getOrderById(orderId)\r\n\r\n            const cancelationSubject = this.getCancelationSubject(order)\r\n\r\n            cancelationSubject.signature = await signCancelOrder(cancelationSubject, this.chain.signer, this.chain.network.CHAIN_ID)\r\n\r\n            return handleResponse(this.chain.api.orionAggregator.delete('/order', {\r\n                data: cancelationSubject\r\n            }))\r\n        } catch (error) {\r\n            return Promise.reject(error)\r\n        }\r\n    }\r\n\r\n    private getCancelationSubject (order: TradeOrderV2 | TradeOrder): CancelOrderRequestV2 {\r\n        const { id, blockchainOrder } = order\r\n        return {\r\n            id,\r\n            sender: blockchainOrder.senderAddress,\r\n            signature: '',\r\n            isPersonalSign: blockchainOrder.isPersonalSign\r\n        }\r\n    }\r\n\r\n    public async getTradeHistory(options?: HistoryParams): Promise<TradeOrderV2[]> {\r\n        const url = '/order/history'\r\n        const params = {\r\n            address: this.chain.signer.address,\r\n            ...options\r\n        }\r\n\r\n        const data = await handleResponse(this.chain.api.orionAggregator.get(url, { params }));\r\n\r\n        return Array.isArray(data) && data.length\r\n            ? data.map(parseTradeOrderV2)\r\n            : []\r\n    }\r\n\r\n\r\n    public async getOrderById (orderId: number | string, owner = this.chain.signer.address): Promise<TradeOrderV2> {\r\n        const path = `/order?orderId=${orderId}&owner=${owner}`\r\n\r\n        const {order} = await handleResponse(this.chain.api.orionAggregator.get(path))\r\n        return parseTradeOrderV2(order)\r\n    }\r\n\r\n    public async getApiVersion (): Promise<number> {\r\n        let version = 1\r\n        try {\r\n            const { apiVersion } = await handleResponse(this.chain.api.orionAggregator.get('/version'))\r\n            version = Number(apiVersion)\r\n        } catch (error) {\r\n            version = 1\r\n        }\r\n        return version\r\n    }\r\n}\r\n","import Websocket from 'ws';\r\nimport ReconnectingWebSocket from 'reconnecting-websocket';\r\nimport { ORION_WS } from '../utils/Constants'\r\nimport EventEmitter from 'events'\r\nimport { parseOrderbookItemsV2, parsePairs } from '../utils/Helpers';\r\n\r\nconst SubscriptionType = {\r\n    ASSET_PAIRS_CONFIG_UPDATES_SUBSCRIBE: 'apcus',\r\n    AGGREGATED_ORDER_BOOK_UPDATES_SUBSCRIBE: 'aobus',\r\n    ADDRESS_UPDATES_SUBSCRIBE: 'aus',\r\n}\r\n\r\nclass WsEmitter extends EventEmitter {\r\n    socket: ReconnectingWebSocket\r\n\r\n    constructor (socket: ReconnectingWebSocket) {\r\n        super()\r\n        this.socket = socket\r\n    }\r\n\r\n    public close () {\r\n        this.socket.close()\r\n    }\r\n}\r\n\r\ninterface MiddlewareFunction {\r\n    (message: any): any;\r\n}\r\n\r\nexport class WS {\r\n    public readonly wsOrionUrl: string\r\n\r\n    constructor(url: string = ORION_WS.MAIN.BSC) {\r\n        this.wsOrionUrl = url\r\n    }\r\n\r\n    public async init(): Promise<boolean> {\r\n        console.warn('WS.init() method is currently deprecated and unnecessary')\r\n        return new Promise(resolve => resolve(true))\r\n    }\r\n\r\n    private connect (url: string, middleware?: MiddlewareFunction, query?: Record<string, unknown>): WsEmitter {\r\n        const socket = new ReconnectingWebSocket(url, [], {\r\n            WebSocket: Websocket\r\n        });\r\n\r\n        const localEmitter = new WsEmitter(socket);\r\n\r\n        socket.onerror = (error) => {\r\n            throw new Error(`WS connection error: ${error.message}!`)\r\n        }\r\n\r\n        socket.onmessage = (message) => {\r\n            if (!message.data) return\r\n            let handledMessage = JSON.parse(message.data)\r\n\r\n            // Ping-pong handling\r\n            if(handledMessage && handledMessage.T === 'pp') {\r\n                socket.send(JSON.stringify(handledMessage))\r\n                return\r\n            }\r\n\r\n            if (query && handledMessage.T && query.T !== `${handledMessage.T}s`) return\r\n\r\n            if (middleware) handledMessage = middleware(handledMessage)\r\n\r\n            localEmitter.emit('message', handledMessage);\r\n        }\r\n\r\n        if (query) socket.send(JSON.stringify(query))\r\n\r\n        return localEmitter\r\n    }\r\n\r\n    public priceFeedAll (): WsEmitter {\r\n        const url = `${this.wsOrionUrl}/ws2/allTickers`\r\n\r\n        return this.connect(url, parsePairs)\r\n    }\r\n\r\n    public priceFeedTicker (symbol: string): WsEmitter {\r\n        const url = `${this.wsOrionUrl}/ws2/ticker/${symbol}`\r\n\r\n        return this.connect(url, parsePairs)\r\n    }\r\n\r\n    public orderBooks (pair: string): WsEmitter {\r\n        return this.orderBooksV2(pair)\r\n    }\r\n\r\n    private orderBooksV2 (pair: string): WsEmitter {\r\n        const url = `${this.wsOrionUrl}/v1`\r\n\r\n        return this.connect(url, parseOrderbookItemsV2, {\r\n            S: pair,\r\n            T: SubscriptionType.AGGREGATED_ORDER_BOOK_UPDATES_SUBSCRIBE\r\n        })\r\n    }\r\n}\r\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","Tokens","nameToAddress","toLowerCase","addressToName","address","addressToNameSafe","nameToAddressSafe","addressesToSymbol","baseAsset","quoteAsset","base","quote","addressesToSymbolSafe","symbol","symbolToAddresses","arr","split","NETWORK","TEST","BSC","RPC","ORION","CHAIN_ID","TX_TIMEOUT_SEC","ETH","MAIN","ORION_WS","ORDER_TYPES","Order","CANCEL_ORDER_TYPES_V2","DeleteOrder","DOMAIN_TYPE","PRICE_DEVIATIONS","MIN","MAX","CHAIN_TX_TYPES","approve","code","deposit","withdraw","mnemonicPhrase","TxError","txHash","message","txCode","txName","getPriceWithDeviation","price","side","deviation","d","dividedBy","percent","negated","plus","multipliedBy","getFee","amount","networkAsset","gasPriceWei","assetsPrices","feePercent","feeAsset","needWithdraw","isPool","limits","BigNumber","lte","Number","entries","every","el","matcherFee","MATCHER_FEE_PERCENT","currency","nameToPrice","toFeePrice","calculateMatcherFee","networkFee","networkFeeEth","includes","SWAP_THROUGH_ORION_POOL_GAS_LIMIT","FILL_ORDERS_AND_WITHDRAW_GAS_LIMIT","FILL_ORDERS_GAS_LIMIT","ethers","utils","formatUnits","calculateNetworkFee","gt","decimalPlaces","parseTradeSubOrder","item","pair","exchange","id","subOrdQty","status","parseTradeOrderV2","assetPair","subOrdersKeys","subOrders","map","parseTradeSubOrderV2","total","date","creationTime","sender","blockchainOrder","fee","tradesInfo","parseOrderbookItem","size","cumulativeSize","cumulativeTotal","avgPrice","deltaSize","exchanges","_arr$","s","parseOrderbookItemsV2","ob","b","asks","a","bids","parsePair","fromCurrency","toCurrency","lastPrice","openPrice","change24h","div","minus","high","low","vol24h","parsePairs","data","newNameToPair","numberToUnit","n","blockchainInfo","baseCurrencyName","parseEther","toString","decimals","assetToDecimals","Math","pow","toFixed","ROUND_DOWN","unitToNumber","numberTo8","handleResponse","request","waitForTx","txResponse","timeoutSec","txType","txHasResult","timeoutRunner","setTimeout","hash","wait","txResult","clearTimeout","getTokenContracts","chain","tokensContracts","tokens","assetToAddress","tokenAddress","tokenContract","Contract","erc20ABI","signer","orderQty","subOrder","time","clientId","feeCurrency","feeQty","order","Api","network","instance","orionBlockchain","axios","baseURL","timeout","orionAggregator","binance","Chain","privateKey","provider","providers","JsonRpcProvider","api","privateKeyFormatted","startsWith","Wallet","connect","init","getBlockchainInfo","getTokensFee","_tokensFee","getBaseLimits","_baseLimits","getNetworkAsset","_blockchainInfo","_tokens","_isEthereum","getTokenAddress","getTokenSymbolsList","getTokenAddressesList","tokenAddressToName","networkToken","find","isNetworkAsset","asset","toUpperCase","checkNetworkTokens","getNetworkBalance","get","getBlockchainPrices","assetName","getGasPrice","isEthereum","getGasPriceOB","getGasPriceBinance","post","jsonrpc","params","getBalance","formatEther","getWalletBalance","ticker","_this","balance","promises","filter","token","getTokenBalance","all","balanceOf","sendTransaction","unsignedTx","gasLimit","from","gasPrice","populateTransaction","getAllowance","toAddress","currentTokenContract","exchangeContractAddress","allowance","allowanceHandler","bignumberAmount","lt","checkNeedZeroReset","constants","Zero","MaxUint256","contract","estimateGas","amountUnit","approveERC20","baseLimits","APPROVE_ERC20_GAS_LIMIT","Exchange","exchangeContract","exchangeABI","getContractBalance","tokenSymbol","tokenAddresses","getBalances","checkReservedBalance","locked","totalBalance","parseContractBalance","walletAddress","total8","totalBN","lockedBN","availableBN","available","depositETH","DEPOSIT_ETH_GAS_LIMIT","depositERC20","depositAsset","DEPOSIT_ERC20_GAS_LIMIT","walletBalance","gasPriceWeiLocal","WITHDRAW_GAS_LIMIT","validateOrder","getDomainData","chainId","version","salt","signCancelOrder","cancelOrderRequest","types","EIP712Domain","domain","primaryType","msgParams","bufferKey","Buffer","substr","signTypedMessage","signOrder","hashOrder","solidityKeccak256","senderAddress","matcherAddress","matcherFeeAsset","nonce","expiration","buySide","Side","OrionAggregator","console","warn","getPairsInfo","pairConfigs","checkBalanceForOrder","feeAmount","formatRawOrder","pairConfig","priceDeviation","formattedOrder","assign","numberFormat","createOrder","orderParams","Date","now","gte","tokensFee","qtyPrecision","pricePrecision","chainPrices","gasWei","blockchainPrices","totalFee","priceWithDeviation","isZero","amountRounded","priceRounded","ROUND_UP","isPersonalSign","signature","sendOrder","isCreateInternalOrder","cancelOrder","orderId","getOrderById","cancelationSubject","getCancelationSubject","getTradeHistory","options","Array","isArray","owner","path","getApiVersion","apiVersion","WsEmitter","socket","close","EventEmitter","WS","url","wsOrionUrl","middleware","query","ReconnectingWebSocket","WebSocket","Websocket","localEmitter","onerror","onmessage","handledMessage","JSON","parse","T","send","stringify","emit","priceFeedAll","priceFeedTicker","orderBooks","orderBooksV2","S","DEFAULT_NUMBER_FORMAT","MAX_VALUE"],"mappings":"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"}